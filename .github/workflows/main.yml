name: Module CI/CD

on: 
  push:
    tags:
      - "v*" # If we tag a release with v0.0.whatever, create a release

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 0
    
    - uses: actions/setup-node@v4

    - name: Extract version from tag
      uses: damienaicheh/extract-version-from-tag-action@v1.3.0

    - name: Get version
      shell: bash
      run: echo "MAJOR=$MAJOR" >> $GITHUB_ENV
      env:
        VERSION: "${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}"

    # Update the version in module.json
    - name: Update version in module.json
      uses: restackio/update-json-file-action@2.1
      with: 
        file: ./module.json
        fields: "{\"version\": \"${{ env.VERSION }}\"}"

    # # Get the name from 'module.json'
    # - name: Get Includes
    #   shell: bash
    #   id: get-includes
    #   run: echo "::set-output name=files::$(node ./.github/workflows/get-includes.js)"

    # Run the build
    - name: Build
      run: npm install && npm run build

    # create a zip file with all files required by the module to add to the release
    - name: Zip Files
      working-directory: dist 
      run: zip -r ../module.zip ${{steps.get-includes.outputs.files}}

    # Useful only for the template so we can leave the manifest and download urls empty
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_latest
      uses: microsoft/variable-substitution@v1
      with:
        files: './dist/module.json'
      env:
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/latest/download/module.zip

    # Update the 'latest' release
    - name: Update Latest Release
      id: create_latest_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: Latest
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './dist/module.json, ./module.zip'
        tag: latest

    #Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: './dist/module.json'
      env:
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{steps.get-version.outputs.version}}/module.zip
    
    # Create a release for this specific version
    - name: Create Version Release
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: false # set this to false if you want to prevent updating existing releases
        name: Release ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './dist/module.json,./module.zip'
        tag: ${{ env.VERSION }}
